package cn.learn.basic.Demo14Q;
/*
    测试写好的工具类
    提供的是一个DataSource接口的数据源
    QueryRunner类构造方法，接收DataSource接口的实现类
    后面，调用方法update，query，无需传递他们Connection连接对象
*/

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.handlers.ArrayListHandler;

import java.sql.SQLException;
import java.util.List;

public class Demo04QueryRunner {
    public static void main(String[] args) {
//        insert();
        select();
    }
    //定义两个方法，实现数据表的添加，数据表查询
    //QueryRunner类对象，写在类成员位置
    private static QueryRunner qr = new QueryRunner(JDBCUtiles.getDataSource());

    //数据表查询
    public static void select() {
        String sql = "SELECT * FROM sort";
        try {


            List<Object[]> lis = qr.query(sql, new ArrayListHandler());
            for (Object[] objs : lis) {
                for (Object obj : objs) {
                    System.out.print(obj + "\t");
                }
                System.out.println();
            }
        }catch (SQLException ex){}
    }
    //数据表添加数据
    public static void insert() {
        String sql = "INSERT INTO sort (sname, sprice, sdesc) VALUES(?,?,?)";
        Object[] param = {"水果",100.12,"刚刚上市的核桃"};
        try {
            int row = qr.update(sql, param);
            System.out.println(row);
        }catch (SQLException ex) {
            ex.printStackTrace();
            throw new RuntimeException("数据添加失败");
        }

    }
}
